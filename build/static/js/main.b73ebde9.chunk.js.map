{"version":3,"sources":["components/Header/logo.png","components/LoginPage/logo.svg","store/dataSources.js","store/ui.js","http.js","store/auth.js","store/organizations.js","store/measures.js","store/payers.js","store/measureResults.js","store/index.js","components/Header/index.jsx","components/Checkbox/index.jsx","components/DataSourceSelector/index.jsx","components/Sidebar/index.jsx","components/SQLEditor/index.jsx","components/DataGrid/index.jsx","components/Chart/index.jsx","components/ReportSummary/index.jsx","components/ReportPage/index.jsx","components/Dropdown/index.jsx","components/TimelineGrid/index.jsx","components/LineChart/index.jsx","components/MeasuresPage/index.jsx","components/LoginPage/index.jsx","components/App/index.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","TOGGLE","LOAD","MERGE","countSelected","state","selectedCount","id","enabled","INITIAL_STATE","sqlEditor","height","options","value","language","lineNumbers","scrollBeyondLastLine","automaticLayout","emptySelectionClipboard","folding","fontFamily","fontSize","glyphMargin","lineHeight","mouseWheelZoom","renderLineHighlight","minimap","renderCharacters","SET_EDITOR_HEIGHT","window","location","fetch","backendUrl","URL","concat","protocol","hostname","http","uri","url","Object","objectSpread","mode","credentials","then","res","json","error","Error","src_http","login","username","password","body","URLSearchParams","set","method","logout","query","sql","data","append","request","$","jQuery","loading","currentUser","JSON","parse","sessionStorage","SET_LOADING","setLoading","payload","type","merge","toggle","dispatch","getState","payer","payers","correspondingClaimsDataSourceId","ds_id","selected","oldState","newState","dataSources","key","selectClaimsDataSource","SET_ERROR","SET_DATA","queryMeasures","arguments","length","undefined","_ref","org","ds","clinic","q","keys","map","organizations","has","toString","getQueryUri","middleWares","thunk","store","createStore","combineReducers","auth","action","extend","ui","defineProperty","forEach","rec","measures","nextState","measureResults","applyMiddleware","apply","loadOrganizations","loadPayers","loadMeasures","payerId","find","loadDataSources","Header","_this","this","react_default","a","createElement","className","NavLink","to","src","logo","alt","props","user","Fragment","Route","path","render","onClick","e","preventDefault","removeItem","href","style","color","React","Component","Checkbox","iconClass","radio","checked","disabled","onChange","label","Sidebar","ehr","claim","_loop","meta","node","components_Checkbox_Checkbox","toggleDataSource","push","connect","components_DataSourceSelector","require","config","paths","vs","SQLEditor","editor","dispose","monaco","editorNode","create","$window","$editor","divider","on","startEvent","startY","clientY","css","overflow","onHeightChange","outerHeight","off","moveEvent","_this2","ref","onQuery","getValue","defaultProps","RemoteDataGrid","btoa","_this$props$data","buildCsvUrl","download","components_DataGrid_DataGrid","cols","header","rows","DataGrid","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","wrapper","createRef","syncHeader","current","headerCells","querySelectorAll","td","i","width","Math","floor","clientWidth","_this$props","title","tabIndex","y","Chart","numerator","denominator","setState","animating","animate","duration","easing","step","now","tween","prop","complete","_this3","percent","max","min","largeArcFlag","_getCoordinatesForPer","cos","PI","sin","getCoordinatesForPercent","_getCoordinatesForPer2","slicedToArray","x","viewBox","round","cx","cy","r","transform","d","ReportSummary","date","measureName","numeratorValue","denominatorValue","measureDescription","numeratorDescription","denominatorDescription","moment","format","components_Chart_Chart","ReportPage","timer","start","Date","tick","prestoLoading","queryTime","setTimeout","dsKeys","search","delete","_this4","startClock","resp","prestoError","prestoData","err","loadData","prevProps","prevDataSources","dsId","_this5","cohort_sql","components_SQLEditor_SQLEditor","assign","h","runQuery","components_ReportSummary_ReportSummary","measureDate","startValue","_this6","_this$state","console","message","Sidebar_Sidebar","margin","exact","role","pathname","createSummaryRenderer","renderEditor","marginTop","textAlign","ms","out","n","reduce","prev","cur","chunk","pop","last","join","formatDuration","DataGrid_RemoteDataGrid","cls","o","filter","c","stopEvent","stopPropagation","Dropdown","open","option","multiple","onSelect","opt","dropdown-item","onMouseDown","toggleOption","fas fa-check-square","far fa-square","description","dropdown","show","onBlur","dropdown-menu","renderOptions","TimelineGrid","_React$Component","inherits","createClass","name","headerLabels","bodyRows","measure","cells","entry","dateObject","month","indexOf","pct","isSame","Link","newDate","add","selectedOrgId","orgId","selectedMeasureId","target","nodeName","onRowClick","contextTypes","router","PropTypes","object","Highcharts","LineChart","chart","borderWidth","borderColor","plotBackgroundColor","plotBorderColor","plotBorderWidth","zoomType","drilldown","allowPointDrilldown","drillUpButton","text","position","theme","stroke-width","stroke","align","fontWeight","subtitle","xAxis","lineWidth","crosshair","showEmpty","categories","plotLines","zIndex","dashStyle","minorTicks","zoomEnabled","utc","startOf","endOf","dateTimeLabelFormats","day","yAxis","lineColor","tickInterval","tooltip","crossHairs","shared","useHTML","headerFormat","pointFormat","footerFormat","valueDecimals","plotOptions","spline","states","hover","marker","series","shadow","fillColor","linearGradient","x1","x2","y1","y2","stops","setOpacity","get","navigation","menuItemStyle","legend","verticalAlign","layout","floating","update","chartOptions","drillUp","marginBottom","MeasuresPage","selection","bind","assertThisInitialized","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","v","_iterator","Symbol","iterator","next","done","_ret","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","_iterator2","_ret2","loadDataIfNeeded","_this$state$selection","measureId","shift","orgData","thisYear","thisMonth","lastPct","lastPct2","_key$split","split","_key$split2","year","point","random","day1","drilldownSeries1","drilldownSeries2","subtract","diff","isSameOrBefore","stack","_this$getSelection","getSelection","reports","_loop3","components_TimelineGrid","msr","LineChart_LineChart","getChartOptions","maxHeight","components_Dropdown_Dropdown","togglePayer","toggleOrg","renderStage","LoginPage","email","onSubmit","from","Redirect","String","htmlFor","placeholder","pass","stringify","catch","PrivateRoute","component","rest","objectWithoutProperties","CPR","App","BrowserRouter","components_Header_Header","Root","es","components_App","ReactDOM","App_Root","document","getElementById"],"mappings":"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","file":"static/js/main.b73ebde9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.21f34708.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.bb973869.svg\";","const TOGGLE = \"actions:dataSources:toggle\";\nconst LOAD   = \"actions:dataSources:loadData\";\nconst MERGE  = \"actions:dataSources:merge\";\n\nfunction countSelected(state) {\n    let selectedCount = 0;\n    for (const id in state) {\n        if (state[id].enabled) {\n            selectedCount += 1;\n        }\n    }\n    return selectedCount;\n}\n\nexport function toggleDataSource(id)\n{\n    return { type: TOGGLE, payload: id };\n}\n\nexport function load(data)\n{\n    return function(dispatch, getState) {\n        const oldState = getState();\n        const newState = {};\n\n        data.forEach(rec => {\n            let enabled = !!rec.enabled;\n            let selected = !!rec.selected;\n\n            if (rec.type === \"claims\") {\n                enabled = false;\n                const payerId = Object.keys(oldState.payers).find(\n                    id => oldState.payers[id].ds_id === rec.id\n                );\n\n                if (!payerId || oldState.payers[payerId].selected) {\n                    selected = true;\n                }\n            }\n\n            newState[rec.id] = {\n                ...rec,\n                selected,\n                enabled\n            };\n        });\n        dispatch({ type: LOAD, payload: newState });\n    };\n}\n\nexport function toggle(id, on) {\n    return function(dispatch, getState) {\n        const oldState = getState();\n        const selectedCount = countSelected(oldState);\n\n        // If we only have one item selected, an \"unselect request\" must be ignored\n        if (selectedCount <= 1 && !on) {\n            return;\n        }\n\n        dispatch({\n            type: MERGE,\n            payload: {\n                [id]: {\n                    selected: !!on\n                }\n            }\n        });\n    };\n}\n\nexport function selectClaimsDataSource(id) {\n    return function(dispatch, getState) {\n        const oldState = getState();\n        const newState = { ...oldState.dataSources };\n\n        for (const key in newState) {\n            if (newState[key].type === \"claims\") {\n                newState[key].selected = key === id;\n            }\n        }\n\n        dispatch({ type: MERGE, payload: newState });\n    };\n}\n\nexport default function reducer(state = {}, action)\n{\n    switch (action.type) {\n\n    case TOGGLE: {\n        const selectedCount = countSelected(state);\n        if (selectedCount <= 1 && state[action.payload].selected) {\n            return state;\n        }\n        return {\n            ...state,\n            [action.payload]: {\n                ...state[action.payload],\n                selected: !state[action.payload].selected\n            }\n        };\n    }\n\n    case LOAD:\n        return { ...action.payload };\n\n    case MERGE:\n        return window.jQuery.extend(true, state, action.payload);\n\n    default:\n        return state;\n    }\n}\n","const INITIAL_STATE = {\n    sqlEditor: {\n        height: 200,\n        options: {\n            value: \"\",\n            language: \"sql\",\n            lineNumbers: \"off\",\n            scrollBeyondLastLine: false,\n            automaticLayout: true,\n            emptySelectionClipboard: false,\n            folding: true,\n            fontFamily: \"Menlo, monospace\",\n            fontSize: 13,\n            glyphMargin: true,\n            lineHeight: 16,\n            mouseWheelZoom: true,\n            renderLineHighlight: \"all\",\n            minimap: {\n                enabled: true,\n                renderCharacters: false\n            }\n        }\n    }\n};\n\nconst SET_EDITOR_HEIGHT = \"actions:ui:sql-editor:setHeight\";\n\nexport function setEditorHeight(height)\n{\n    return { type: SET_EDITOR_HEIGHT, payload: height };\n}\n\nexport default function reducer(state = INITIAL_STATE, action)\n{\n    switch (action.type) {\n    case SET_EDITOR_HEIGHT:\n        return {\n            ...state,\n            sqlEditor: {\n                ...state.sqlEditor,\n                height: action.payload\n            }\n        };\n    default:\n        return state;\n    }\n}","// This file contains the functions for communication with the backend.\n// NOTE: This will only work if the backend server is listening on port 3003\n// on the same domain and on the same protocol!\n\nconst { location, fetch } = window;\n\nconst backendUrl = new URL(\n    `${location.protocol}//${location.hostname}:3003`\n);\n\nfunction http(uri, options) {\n    const url = new URL(uri, backendUrl);\n    return fetch(url, {\n        mode: \"cors\",\n        credentials: \"include\",\n        ...options\n    }).then(res => res.json()).then(res => {\n        if (res.error) {\n            throw new Error(res.error);\n        }\n        return res;\n    });\n}\n\nexport function login(username, password) {\n    const body = new URLSearchParams();\n    body.set(\"username\", username);\n    body.set(\"password\", password);\n    return http(\"auth/login\", { method: \"POST\", body });\n}\n\nexport function logout() {\n    return http(\"auth/logout\");\n}\n\nexport function query(sql) {\n    const data = new URLSearchParams();\n    data.append(\"query\", sql);\n    return http(\"sql\", {\n        method: \"POST\",\n        body: data\n    });\n}\n\nexport default {\n    login,\n    logout,\n    query,\n    request: http\n};","import http from \"../http\"\n\nconst $ = window.jQuery;\n\nconst INITIAL_STATE = {\n    loading: false,\n    error: null,\n    currentUser: JSON.parse(sessionStorage.currentUser || \"null\")\n};\n\nconst MERGE       = \"actions:auth:merge\";\nconst SET_LOADING = \"actions:auth:setLoading\";\n\nexport function setLoading(payload)\n{\n    return { type: SET_LOADING, payload };\n}\n\nexport function merge(payload)\n{\n    return { type: MERGE, payload };\n}\n\nexport function login(email, password)\n{\n    return function (dispatch, getState)\n    {\n        dispatch(setLoading(true));\n        return http.login(email, password).then(user => {\n            sessionStorage.currentUser = JSON.stringify(user);\n            dispatch(merge({\n                currentUser: user,\n                error: null,\n                loading: false\n            }));\n        }).catch(error => {\n            console.error(error);\n            dispatch(merge({ error, loading: false }));\n        });\n    };\n}\n\nexport function logout()\n{\n    return function (dispatch, getState)\n    {\n        dispatch(setLoading(true));\n        return http.logout().then(() => {\n            sessionStorage.removeItem(\"currentUser\");\n            dispatch(merge({\n                currentUser: null,\n                error: null,\n                loading: false\n            }));\n        });\n    };\n}\n\nexport default function reducer(state = INITIAL_STATE, action)\n{\n    switch (action.type) {\n    case MERGE:\n        return $.extend(true, {}, state, action.payload);\n    case SET_LOADING:\n        return { ...state, loading: !!action.payload };\n    default:\n        return state;\n    }\n}\n","const TOGGLE = \"actions:organization:toggle\";\nconst LOAD   = \"actions:organization:loadData\";\n\nexport function toggle(id)\n{\n    return { type: TOGGLE, payload: id };\n}\n\nexport function load(data)\n{\n    return { type: LOAD, payload: data };\n}\n\nexport default function reducer(state = {}, action)\n{\n    switch (action.type) {\n    case TOGGLE:\n        return {\n            ...state,\n            [action.payload]: {\n                ...state[action.payload],\n                enabled: !state[action.payload].enabled\n            }\n        };\n    case LOAD: {\n        const newState = {};\n        action.payload.forEach(rec => {\n            newState[rec.id] = rec;\n        });\n        return newState;\n    }\n    default:\n        return state;\n    }\n}","const LOAD = \"actions:measures:loadData\";\n\nexport function load(data)\n{\n    return { type: LOAD, payload: data };\n}\n\nexport default function reducer(state = {}, action)\n{\n    switch (action.type) {\n    case LOAD: {\n        const newState = {};\n        action.payload.forEach(rec => {\n            newState[rec.id] = rec;\n        });\n        return newState;\n    }\n    default:\n        return state;\n    }\n}","import { selectClaimsDataSource } from \"./dataSources\";\n\nconst TOGGLE = \"actions:payers:toggle\";\nconst LOAD   = \"actions:payers:loadData\";\n\nexport function toggle(id) {\n    return function(dispatch, getState) {\n\n        const oldState = getState();\n        const payer = oldState.payers[id];\n        const correspondingClaimsDataSourceId = payer.ds_id;\n\n        if (!payer.selected) {\n            dispatch(selectClaimsDataSource(correspondingClaimsDataSourceId));\n        }\n        dispatch({ type: TOGGLE, payload: id });\n    };\n}\n\nexport function load(data) {\n    return function(dispatch) {\n        dispatch({ type: LOAD, payload: data });\n    };\n}\n\nexport default function reducer(state = {}, action)\n{\n    switch (action.type) {\n    case TOGGLE: {\n        const nextState = {};\n        for (const id in state) {\n            nextState[id] = {\n                ...state[id],\n                selected: id === action.payload ? !state[action.payload].selected : false\n            };\n        }\n        return nextState;\n    }\n    case LOAD: {\n        const newState = {};\n        action.payload.forEach(rec => {\n            newState[rec.id] = rec;\n        });\n        return newState;\n    }\n    default:\n        return state;\n    }\n}","import http from \"../http\";\n\n\nconst INITIAL_STATE = {\n    loading: false,\n    error  : null,\n    data   : null,\n    uri    : \"\"\n};\n\nconst SET_LOADING = \"actions:measureResults:setLoading\";\nconst SET_ERROR   = \"actions:measureResults:setError\";\nconst SET_DATA    = \"actions:measureResults:setData\";\nconst MERGE       = \"actions:measureResults:merge\";\n\n/**\n * Compile and return the uri that will be used to query the measure results.\n * If any of the needed variables are missing (E.g. not available yet), it\n * will return null.\n */\nexport function getQueryUri(state, { org, payer, clinic, ds } = {})\n{\n    let q = new URLSearchParams();\n\n    // console.log(state);\n\n    // payers ------------------------------------------------------------------\n    if (payer) {\n        q.append(\"payer\", payer);\n    } else {\n        Object.keys(state.payers).map(id => {\n            if (state.payers[id].selected) q.append(\"payer\", id);\n            return true;\n        });\n    }\n\n    // organizations -----------------------------------------------------------\n    if (org) {\n        q.append(\"org\", org);\n    } else {\n        Object.keys(state.organizations).map(id => {\n            if (state.organizations[id].enabled) q.append(\"org\", id);\n            return true;\n        });\n    }\n\n    // Clinics -----------------------------------------------------------------\n    // TODO\n\n    // Data Sources ------------------------------------------------------------\n    if (ds) {\n        q.append(\"ds\", ds);\n    } else {\n        Object.keys(state.dataSources).map(id => {\n            if (state.dataSources[id].selected) q.append(\"ds\", id);\n            return true;\n        });\n    }\n\n    // payer and data source are required\n    if (!q.has(\"payer\") || !q.has(\"ds\")) {\n        return null;\n    }\n\n    q = q.toString();\n\n    if (!q) {\n        return null;\n    }\n\n    return \"/api/measure/result?\" + q;\n}\n\n\nexport function queryMeasures(options = {})\n{\n    return function(dispatch, getState) {\n\n        const state = getState();\n        const uri   = getQueryUri(state, options);\n        if (uri && uri !== state.uri) {\n            dispatch(merge({ uri, loading: true }));\n            http.request(uri).then(\n                data  => dispatch(merge({  data, loading: false })),\n                error => dispatch(merge({ error, loading: false }))\n            );\n        }\n    };\n}\n\nexport function setLoading(isLoading)\n{\n    return { type: SET_LOADING, payload: !!isLoading };\n}\n\nexport function setError(error)\n{\n    return { type: SET_ERROR, payload: error };\n}\n\nexport function setData(data)\n{\n    return { type: SET_DATA, payload: data };\n}\n\nexport function merge(payload)\n{\n    return { type: MERGE, payload };\n}\n\nexport default function reducer(state = INITIAL_STATE, action)\n{\n    switch (action.type) {\n    case SET_LOADING:\n        return { ...state, loading: !!action.payload };\n    case SET_ERROR:\n        return { ...state, error: action.payload };\n    case SET_DATA:\n        return { ...state, data: action.payload };\n    case MERGE:\n        return { ...state, ...action.payload };\n    default:\n        return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk          from \"redux-thunk\";\nimport dataSources    from \"./dataSources\";\nimport ui             from \"./ui\";\nimport auth           from \"./auth\";\nimport organizations  from \"./organizations\";\nimport measures       from \"./measures\";\nimport payers         from \"./payers\";\nimport measureResults from \"./measureResults\";\nimport http           from \"../http\";\n\nimport { load as loadOrganizations } from \"./organizations\";\nimport { load as loadPayers        } from \"./payers\";\nimport { load as loadMeasures      } from \"./measures\";\nimport { load as loadDataSources   } from \"./dataSources\";\n\nconst middleWares = [ thunk ];\n\n// Create logger middleware that will log all redux action but only\n// use that in development env.\nif (process.env.NODE_ENV === \"development\" && console && console.groupCollapsed) {\n    let logger = _store => next => action => {\n        let result;\n        if (!action.__no_log) {\n            console.groupCollapsed(action.type);\n            console.info(\"dispatching\", action);\n            result = next(action);\n            console.log(\"next state\", _store.getState());\n            console.groupEnd(action.type);\n        }\n        else {\n            result = next(action);\n        }\n        return result;\n    };\n\n    middleWares.push(logger);\n}\n\n\nconst store = createStore(\n    combineReducers({\n        auth,\n        ui,\n        organizations,\n        dataSources,\n        measures,\n        payers,\n        measureResults\n    }),\n    applyMiddleware(...middleWares)\n);\n\nexport default store;\n\n// Load the data from the backend ==============================================\nhttp.request(\"api/ui\").then(data => {\n    store.dispatch(loadOrganizations(data.organizations));\n    store.dispatch(loadPayers(data.payers));\n    store.dispatch(loadMeasures(data.measures));\n    store.dispatch(loadDataSources(data.dataSources));\n});","import React              from \"react\";\nimport PropTypes          from \"prop-types\";\nimport { NavLink, Route } from \"react-router-dom\";\nimport logo               from \"./logo.png\";\nimport { logout }         from \"../../store/auth\";\nimport                         \"./Header.scss\";\n\nexport default class Header extends React.Component {\n\n    static propTypes = {\n        user    : PropTypes.object,\n        dispatch: PropTypes.func,\n        loading : PropTypes.bool\n    };\n\n    render() {\n        return (\n            <header className=\"app-header navbar navbar-expand-lg\">\n                <div className=\"container collapse navbar-collapse justify-content-between\">\n                    <div className=\"navbar-brand\">\n                        <NavLink className=\"app-link\" to=\"/measures\">\n                            <img src={logo} className=\"app-logo\" alt=\"logo\" />\n                        </NavLink>\n                    </div>\n                    { this.props.user && (\n                        <>\n                            <ul className=\"navbar-nav justify-content-center\">\n                                <Route path=\"/measures\" render={() => (\n                                    <li className=\"nav-item\">\n                                        <b className=\"nav-link active\">Measures</b>\n                                    </li>\n                                )} />\n                                <Route path=\"/report\" render={() => (\n                                    <>\n                                        <li className=\"nav-item\">\n                                            <NavLink className=\"nav-link\" to=\"/measures\">Measures</NavLink>\n                                        </li>\n                                        <li className=\"nav-item\">\n                                            <b className=\"nav-link active\">Report</b>\n                                        </li>\n                                    </>\n                                )} />\n                            </ul>\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item text-right\">\n                                    <a className=\"nav-link\" onClick={e => {\n                                        e.preventDefault();\n                                        this.props.dispatch(logout());\n                                    }} href=\"/login\">\n                                        <i className={\n                                            \"fas fa-power-off\" + (\n                                                this.props.loading ? \" fa-spin\" : \"\"\n                                            )\n                                        } style={{ color: \"#FA0\" }}/> Logout\n                                    </a>\n                                </li>\n                            </ul>\n                        </>\n                    )}\n                </div>\n            </header>\n        );\n    }\n}\n","import React     from \"react\";\nimport PropTypes from \"prop-types\";\nimport                \"./Checkbox.scss\";\n\n\nexport default class Checkbox extends React.Component\n{\n    static propTypes = {\n        label   : PropTypes.string.isRequired,\n        checked : PropTypes.oneOfType([PropTypes.bool, PropTypes.number]).isRequired,\n        disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n        onChange: PropTypes.func.isRequired,\n        radio   : PropTypes.bool\n    };\n\n    render()\n    {\n        const iconClass = this.props.radio ?\n            (this.props.checked ? \"fa fa-check-circle\" : \"far fa-circle\") :\n            (this.props.checked ? \"fas fa-check-square\" : \"far fa-square\");\n\n        return (\n            <label\n                className={\"checkbox-label\" + (this.props.checked ? \" selected\" : \"\") }\n                onClick={() => !this.props.disabled && this.props.onChange(!this.props.checked) }\n                disabled={ !!this.props.disabled }\n            >\n                <i className={ iconClass }/> { this.props.label }\n            </label>\n        );\n    }\n}","import React                from \"react\";\nimport PropTypes            from \"prop-types\";\nimport { connect }          from \"react-redux\";\nimport { toggleDataSource } from \"../../store/dataSources\";\nimport Checkbox             from \"../Checkbox\";\nimport                           \"./DataSourceSelector.css\";\n\nclass Sidebar extends React.Component\n{\n    static propTypes = {\n        dataSources     : PropTypes.object.isRequired,\n        toggleDataSource: PropTypes.func.isRequired\n    };\n\n    render()\n    {\n        const ehr   = [];\n        const claim = [];\n\n        for (const id in this.props.dataSources) {\n            const meta = this.props.dataSources[id];\n\n            const node = (\n                <Checkbox\n                    key={ id }\n                    label={ meta.label }\n                    checked={ !!meta.selected }\n                    disabled={ !meta.enabled }\n                    onChange={ () => this.props.toggleDataSource(id) }\n                    radio={ meta.type === \"claims\" }\n                />\n            );\n\n            if (meta.type === \"ehr\") {\n                ehr.push(node);\n            }\n            else if (meta.type === \"claims\") {\n                claim.push(node);\n            }\n        }\n\n        return (\n            <div>\n                <h6 className=\"data-sources-title\">EHR DATA SOURCES</h6>\n                { ehr }\n                <br/>\n                <br/>\n                <h6 className=\"data-sources-title\">CLAIMS DATA SOURCE</h6>\n                { claim }\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        dataSources: { ...state.dataSources }\n    }),\n    dispatch => ({\n        toggleDataSource: id => dispatch(toggleDataSource(id))\n    })\n)(Sidebar);\n","import React              from \"react\";\nimport DataSourceSelector from \"../DataSourceSelector\";\n\nexport default class Sidebar extends React.Component\n{\n    render() {\n        return (\n            <div className=\"col-3 app-sidebar\">\n                <DataSourceSelector/>\n            </div>\n        );\n    }\n}\n","import React     from \"react\";\nimport PropTypes from \"prop-types\";\nimport            \"./SQLEditor.css\";\n\nwindow.require.config({ paths: { vs: \"/monaco-editor/min/vs\" }});\n\nexport default class SQLEditor extends React.Component\n{\n    static propTypes = {\n        query         : PropTypes.string,\n        height        : PropTypes.number,\n        options       : PropTypes.object,\n        onHeightChange: PropTypes.func.isRequired,\n        onQuery       : PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        query: \"\"\n    };\n\n    shouldComponentUpdate()\n    {\n        return false;\n    }\n\n    componentWillUnmount()\n    {\n        if (this.editor) {\n            this.editor.dispose();\n            this.editor = null;\n        }\n    }\n\n    componentDidMount()\n    {\n        window.require([\"vs/editor/editor.main\"], monaco => {\n            if (this.editorNode) {\n                this.editor = monaco.editor.create(this.editorNode, {\n                    ...this.props.options,\n                    value: this.props.query\n                });\n\n                // Row Resizer -----------------------------------------------------\n                const $ = window.jQuery;\n                const $window = $(window);\n                const $editor = $(this.editorNode);\n\n                $(this.divider).on(\"mousedown\", startEvent => {\n                    const startY = startEvent.clientY;\n                    let height = $editor.css({ overflow: \"hidden\" }).height();\n                    $window.on(\"mouseup.resize\", () => {\n                        $editor.css({ overflow: \"visible\" });\n                        this.props.onHeightChange($editor.outerHeight());\n                        $window.off(\".resize\");\n                    });\n                    $window.on(\"mousemove.resize\", moveEvent => {\n                        $editor.height(height + moveEvent.clientY - startY);\n                    });\n                });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"sql-editor\" ref={ node => this.editorNode = node } style={{ height: this.props.height }} />\n                <div className=\"sql-editor-resizer\" ref={ node => this.divider = node }>.....</div>\n                <button className=\"btn btn-brand active\" onClick={() => this.props.onQuery(this.editor.getValue())}>RUN</button>\n            </div>\n        );\n    }\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React     from \"react\";\nimport PropTypes from \"prop-types\";\nimport                \"./DataGrid.scss\";\n\nexport default class RemoteDataGrid extends React.Component\n{\n    static propTypes = {\n\n        /**\n         * Let the grid know what SQL query has produced the data. This is\n         * needed so that we can build the download csv link\n         */\n        query: PropTypes.string.isRequired,\n\n        /**\n         * The data to render in the grid\n         */\n        data: PropTypes.shape({\n            header: PropTypes.arrayOf(PropTypes.string),\n            data: PropTypes.arrayOf(PropTypes.array)\n        })\n    };\n\n    buildCsvUrl()\n    {\n        return \"http://localhost:3003/sql/csv?q=\" + btoa(this.props.query);\n    }\n\n    render() {\n        const { data = {} } = this.props;\n\n        return (\n            <div className=\"table-wrap\">\n                <div className=\"row\">\n                    <div className=\"col-6 align-middle\">\n                        <h5>Preview</h5>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <a\n                            className=\"btn btn-brand\"\n                            href={ this.buildCsvUrl() }\n                            download=\"report.csv\"\n                        >DOWNLOAD CSV</a>\n                    </div>\n                </div>\n                <DataGrid cols={ data.header } rows={ data.data} />\n            </div>\n        );\n    }\n}\n\nclass DataGrid extends React.Component\n{\n    static propTypes = {\n        cols: PropTypes.arrayOf(PropTypes.string),\n        rows: PropTypes.arrayOf(PropTypes.array)\n    };\n\n    static defaultProps = {\n        cols: [],\n        rows: [] \n    };\n\n    constructor(props)\n    {\n        super();\n        this.wrapper = React.createRef();\n    }\n\n    componentDidUpdate()\n    {\n        this.syncHeader();\n    }\n\n    componentDidMount()\n    {\n        this.syncHeader();\n    }\n\n    syncHeader() {\n        if (this.wrapper.current) {\n            let headerCells = this.wrapper.current.querySelectorAll(\".data-grid-header th\");\n            let bodyCells = this.wrapper.current.querySelectorAll(\".data-grid-body tr:first-child td\");\n            bodyCells.forEach((td, i) => {\n                headerCells[i].style.width = Math.floor(td.clientWidth + 1) + \"px\";\n            });\n        }\n    }\n\n    render()\n    {\n        const { rows, cols } = this.props;\n\n        if (!rows.length) {\n            return <p className=\"text-center\">No data</p>;\n        }\n    \n        const header = (\n            <thead>\n                <tr>\n                { cols.map((key, i) => (\n                    <th key={\"th-\" + i} title={ key }>{ key }</th>\n                )) }\n                </tr>\n            </thead>\n        );\n\n        const body = rows.map((rec, i) => (\n            <tr key={i} tabIndex={0}>\n                { rec.map((key, y) => (\n                    <td key={\"cell-\" + i + \"-\" + y}>{ key }</td>\n                )) }\n            </tr>\n        ));\n\n        return (\n            <div ref={ this.wrapper }>\n                <div className=\"data-grid-header\">\n                    <table className=\"table table-sm table-bordered table-hover data-grid\">\n                        { header }\n                    </table>\n                </div>\n                <div className=\"data-grid-body\">\n                    <table className=\"table table-sm table-bordered table-hover data-grid\">\n                        <tbody>{ body }</tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Chart.scss\";\n\nfunction getCoordinatesForPercent(percent) {\n    const x = Math.cos(2 * Math.PI * percent);\n    const y = Math.sin(2 * Math.PI * percent);\n    return [x * 100, y * 100];\n}\n\nexport default class Chart extends React.Component\n{\n    static propTypes = {\n        numerator  : PropTypes.number.isRequired,\n        denominator: PropTypes.number.isRequired,\n        duration   : PropTypes.number,\n        easing     : PropTypes.string\n    };\n\n    static defaultProps = {\n        duration: 1200,\n        easing  : \"easeInOutExpo\"\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { numerator: 0, denominator: 1 };\n    }\n\n    componentDidMount() {\n        this.setState({ animating: true }, () => {\n            window.jQuery({ numerator: 0, denominator: this.props.denominator }).animate(\n                {\n                    numerator  : this.props.numerator,\n                    denominator: this.props.denominator\n                },\n                {\n                    duration: this.props.duration,\n                    easing  : this.props.easing,\n                    step: (now, tween) => this.setState({ [tween.prop]: now }),\n                    complete: () => this.setState({ animating: false })\n                }\n            );\n        });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.animating && this.state.numerator !== this.props.numerator) {\n            this.setState({ animating: true }, () => {\n                window.jQuery({\n                    numerator: this.state.numerator,\n                    denominator: this.state.denominator\n                }).animate(\n                    {\n                        numerator  : this.props.numerator,\n                        denominator: this.props.denominator\n                    },\n                    {\n                        duration: this.props.duration,\n                        easing  : this.props.easing,\n                        step: (now, tween) => this.setState({ [tween.prop]: now }),\n                        complete: () => this.setState({ animating: false })\n                    }\n                );\n            });\n        }\n    }\n\n    render() {\n        const percent = Math.max(Math.min(this.state.numerator / this.state.denominator * 100, 100), 0);\n        const largeArcFlag = percent >= 50 ? 1 : 0;\n        const [x, y] = getCoordinatesForPercent(percent / 100);\n        return (\n            <svg className=\"chart\" viewBox=\"-110 -110 220 220\">\n                <text className=\"chart-big-text\" y={0}>{Math.round(percent)}%</text>\n                {\n                    <text className=\"chart-small-text\" y={35}>\n                        {Math.round(this.state.numerator)}/{Math.round(this.state.denominator)}\n                    </text>\n                }\n                {\n                    percent === 0 ?\n                        <circle cx={0} cy={0} r={100} className=\"chart-arc-bg\"/> :\n                        <g style={{ transform: \"rotate(-0.25turn)\" }}>\n                            <path className=\"chart-arc-main\" d={`M 100 0 A 100 100 0 ${largeArcFlag} 1 ${x} ${y}`}/>\n                            <path className=\"chart-arc-bg\" d={`M ${x} ${y} A 100 100 0 ${largeArcFlag ? 0 : 1 } 1 100 0`}/>\n                        </g>\n                }\n            </svg>\n        );\n    }\n}\n","import React     from \"react\";\nimport moment    from \"moment\";\nimport PropTypes from \"prop-types\";\nimport Chart     from \"../Chart\";\nimport                \"./ReportSummary.scss\";\n\nexport default class ReportSummary extends React.Component\n{\n    static propTypes = {\n        date                  : PropTypes.string.isRequired,\n        clinic                : PropTypes.string,\n        measureName           : PropTypes.string,\n        numeratorValue        : PropTypes.number,\n        denominatorValue      : PropTypes.number,\n        measureDescription    : PropTypes.string,\n        numeratorDescription  : PropTypes.string,\n        denominatorDescription: PropTypes.string\n    };\n\n    render()\n    {\n        const {\n            date,\n            clinic,\n            measureName,\n            numeratorValue,\n            denominatorValue,\n            measureDescription,\n            numeratorDescription,\n            denominatorDescription\n        } = this.props;\n\n\n        return (\n            <div className=\"report-summary\">\n                <div className=\"row\">\n                    <div className=\"col-8\">\n                        <div className=\"sub-title\">{ clinic }: { moment(date).format(\"MMMM YYYY\") }</div>\n                        <div className=\"title\">{ measureName }</div>\n                    </div>\n                    <div className=\"col\">\n                        <Chart\n                            numerator={ numeratorValue }\n                            denominator={ denominatorValue }\n                        />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <p className=\"sub-title\">POPULATION HEALTH IMPACT</p>\n                        <p>{ measureDescription }</p>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <p className=\"sub-title\">NUMERATOR</p>\n                        <p>{ numeratorDescription }</p>\n                    </div>\n                    <div className=\"col\">\n                        <p className=\"sub-title\">DENOMINATOR</p>\n                        <p>{ denominatorDescription }</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React               from \"react\";\nimport PropTypes           from \"prop-types\";\nimport { connect }         from \"react-redux\";\nimport { Route, NavLink }  from \"react-router-dom\";\nimport Sidebar             from \"../Sidebar\";\nimport SQLEditor           from \"../SQLEditor\";\nimport DataGrid            from \"../DataGrid\";\nimport ReportSummary       from \"../ReportSummary\";\nimport http                from \"../../http\";\nimport { setEditorHeight } from \"../../store/ui\";\n\nfunction formatDuration(ms) {\n    let out = [];\n    let meta = [\n        { label: \"week\"  , n: 1000 * 60 * 60 * 24 * 7 },\n        { label: \"day\"   , n: 1000 * 60 * 60 * 24     },\n        { label: \"hour\"  , n: 1000 * 60 * 60          },\n        { label: \"minute\", n: 1000 * 60               },\n        { label: \"second\", n: 1000                    },\n        { label: \"ms\"    , n: 1                       }\n    ];\n\n    meta.reduce((prev, cur) => {\n        let chunk = Math.floor(prev / cur.n);\n        if (chunk) {\n            out.push(`${chunk} ${cur.label}${chunk > 1 && cur.n > 1 ? \"s\" : \"\"}`);\n            return prev - chunk * cur.n;\n        }\n        return prev;\n    }, ms);\n\n    if (!out.length) {\n        out.push(`0 ${meta.pop().label}`);\n    }\n\n    if (out.length > 1) {\n        let last = out.pop();\n        out[out.length - 1] += \" and \" + last;\n    }\n\n    return out.join(\", \");\n}\n\nclass ReportPage extends React.Component\n{\n    static propTypes = {\n        match: PropTypes.shape({\n            params: PropTypes.shape({\n                id     : PropTypes.string,\n                date   : PropTypes.string,\n                measure: PropTypes.string,\n                org    : PropTypes.string\n            })\n        }),\n        location: PropTypes.object,\n        ui: PropTypes.shape({\n            sqlEditor: PropTypes.object\n        }),\n        dispatch: PropTypes.func.isRequired,\n        dataSources: PropTypes.object\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            loading: true,\n            error  : null,\n            data   : null\n        };\n\n        this.timer = null;\n    }\n\n    /**\n     * Starts a timer that is active while a query is running. When the query is\n     * complete (successful or not) the timer will destroy itself. This is used\n     * to measure the total time that it takes to execute a query and receive\n     * the result.\n     */\n    startClock() {\n        const start = Date.now();\n\n        const tick = () => {\n            if (this.state.prestoLoading) {\n                this.setState({\n                    queryTime: Date.now() - start\n                }, () => {\n                    this.timer = setTimeout(tick, 100);\n                });\n            } else {\n                this.timer = null;\n            }\n        };\n\n        tick();\n    }\n\n    /**\n     * Loads the report data\n     */\n    loadData()\n    {\n        const dsKeys = Object.keys(this.props.dataSources);\n        const query = new URLSearchParams(this.props.location.search);\n\n        if (dsKeys.length) {\n            query.delete(\"ds\");\n            dsKeys.forEach(key => {\n                if (this.props.dataSources[key].selected) {\n                    query.append(\"ds\", key);\n                }\n            });\n        }\n\n        this.setState({ loading: true }, () => {\n            http.request(`/api/measure/result/report?${query}`).then(\n                data  => this.setState({ data, loading: false }),\n                error => this.setState({ error, loading: false })\n            );\n        });\n    }\n\n    /**\n     * Execute an SQL query and render the results in the grid\n     * @param {String} q The SQL to execute\n     */\n    runQuery(q)\n    {\n        this.setState({\n            prestoLoading: true,\n            queryTime: 0,\n            query: q\n        }, () => {\n            this.startClock();\n            http.query(q).then(\n                resp => {\n                    this.setState({\n                        prestoLoading: false,\n                        prestoError  : null,\n                        prestoData   : resp\n                    });\n                },\n                err => {\n                    this.setState({\n                        prestoLoading: false,\n                        prestoError  : err,\n                        prestoData   : null\n                    });\n                }\n            );\n        });\n    }\n\n    /**\n     * Fetch the report data after the first render\n     */\n    componentDidMount()\n    {\n        this.loadData();\n    }\n\n    componentDidUpdate(prevProps)\n    {\n        if (!this.state.loading) {\n\n            // Detect dataSource selection change\n            const prevDataSources = prevProps.dataSources || {};\n            for (const dsId in prevDataSources) {\n                const curDs = (this.props.dataSources || {})[dsId];\n                if (curDs.selected !== prevDataSources[dsId].selected) {\n                    return this.loadData();\n                }\n            }\n        }\n    }\n\n    renderEditor()\n    {\n        if (!this.state.data || !this.state.data.cohort_sql) {\n            return null;\n        }\n\n        return (\n            <SQLEditor\n                query={ this.state.data.cohort_sql }\n                { ...this.props.ui.sqlEditor }\n                onHeightChange={ h => this.props.dispatch(setEditorHeight(h)) }\n                onQuery={ q => this.runQuery(q) }\n            />\n        );\n    }\n\n    createSummaryRenderer()\n    {\n        if (!this.state.data) return null;\n\n        return (\n            <ReportSummary\n                clinic=\"All Clinics\"\n                date={ this.state.data.measureDate }\n                measureName={ this.state.data.measureName }\n                startValue={ this.state.numeratorValue }\n                numeratorValue={ this.state.data.numeratorValue }\n                denominatorValue={ this.state.data.denominatorValue }\n                measureDescription={ this.state.data.measureDescription || \"No description available for this measure\" }\n                numeratorDescription={ this.state.data.numeratorDescription || \"No description available for the numerator of this measure\"   }\n                denominatorDescription={ this.state.data.denominatorDescription || \"No description available for the denominator of this measure\" }\n            />\n        );\n    }\n\n    render()\n    {\n        const {\n            error,\n            // loading,\n            prestoError,\n            prestoData,\n            prestoLoading,\n            queryTime,\n            query\n        } = this.state;\n\n        if ( error ) {\n            console.error(error);\n            return <b>{ error.message }</b>;\n        }\n\n        // if ( loading ) {\n        //     return <b>Loading...</b>;\n        // }\n\n        return (\n            <div>\n                <div className=\"row\">\n                    <Sidebar/>\n                    <div className=\"col-9\">\n                        <div className=\"row\">\n                            <div className=\"col-6 align-middle\">\n                                <h3 style={{ lineHeight: \"43px\", margin: 0 }}>\n                                    <Route path=\"/report\" exact render={() => \"Month Report\" }/>\n                                    <Route path=\"/report/editor\" render={() => \"Cohort Builder\"} />\n                                </h3>\n                            </div>\n                            <div className=\"col-6 text-right\">\n                                <div className=\"btn-group view-toggle\" role=\"group\">\n                                    <NavLink className=\"btn btn-brand\" to={{\n                                        pathname: \"/report\",\n                                        search  : this.props.location.search\n                                    }} exact>REPORT</NavLink>\n                                    <NavLink className=\"btn btn-brand\" to={{\n                                        pathname: \"/report/editor\",\n                                        search  : this.props.location.search\n                                    }} exact>BUILDER</NavLink>\n                                </div>\n                            </div>\n                        </div>\n                        <br/>\n                        <Route path=\"/report\"        exact render={() => this.createSummaryRenderer()}/>\n                        <Route path=\"/report/editor\" exact render={() => this.renderEditor()} />\n                        {\n                            queryTime ?\n                                <div className=\"float-right\" style={{ marginTop: \"-4em\", fontSize: 11, color: \"#999\", textAlign: \"right\" }}>\n                                        Total time: { formatDuration(queryTime) }<br/>\n                                    { !prestoLoading && prestoData ? \"Result rows: \" + prestoData.data.length : \"\" }\n                                </div> :\n                                null\n                        }\n                        <br/>\n                        <br/>\n                        {\n                            prestoLoading ?\n                                <div className=\"alert alert-info\">Loading...</div> :\n                                prestoError ?\n                                    <div className=\"alert alert-danger\">{ prestoError.message }</div> :\n                                    prestoData === undefined ?\n                                        null :\n                                        prestoData && prestoData.data && prestoData.data.length ?\n                                            <DataGrid data={ prestoData } query={query}/> :\n                                            <div className=\"alert alert-info\">No data to display</div>\n                        }\n                        <br/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        ui: state.ui,\n        dataSources: state.dataSources\n    })\n)(ReportPage);\n","import React     from \"react\";\nimport PropTypes from \"prop-types\";\nimport                \"./Dropdown.scss\";\n\nfunction cls(o) {\n    return Object.keys(o).filter(c => !!o[c]).join(\" \");\n}\n\nfunction stopEvent(e) {\n    e.preventDefault();\n    e.stopPropagation();\n}\n\nexport default class Dropdown extends React.Component\n{\n    static propTypes = {\n        value: PropTypes.any,\n        label: PropTypes.string.isRequired,\n        multiple: PropTypes.bool,\n        onSelect: PropTypes.func.isRequired,\n        options: PropTypes.arrayOf(PropTypes.shape({\n            label      : PropTypes.string.isRequired,\n            description: PropTypes.string,\n            value      : PropTypes.any\n        }))\n    };\n\n    constructor(props)\n    {\n        super(props);\n        this.state = { open: false };\n    }\n\n    toggleOption(option) {\n        if (!this.props.multiple) {\n            this.setState({ open: false });\n        }\n        this.props.onSelect(option.value);\n    }\n\n    renderOptions()\n    {\n        return this.props.options.map(opt => {\n            return (\n                <div\n                    key={ opt.value }\n                    className={cls({\"dropdown-item\": 1, selected: opt.selected})}\n                    onMouseDown={ () => this.toggleOption(opt) }\n                >\n                    {this.props.multiple && <i className={cls({\n                        \"fas fa-check-square\": opt.selected,\n                        \"far fa-square\"      : !opt.selected\n                    })}/>}\n                    <b>{ opt.label }</b>\n                    { opt.description && <div className=\"small text-muted\">{ opt.description }</div> }\n                </div>\n            );\n        });\n    }\n\n    render()\n    {\n        let label = \"None Selected\";\n        const selected = this.props.options.filter(o => o.selected);\n        if (selected.length > 0) {\n            if (selected.length === this.props.options.length) {\n                label = `All ${this.props.label}`;\n            }\n            else {\n                label = selected.map(o => o.label).join(\", \");\n            }\n        }\n        return (\n            <div className={cls({\n                dropdown: 1,\n                multiple: this.props.multiple,\n                show    : this.state.open\n            })}>\n                <button\n                    className=\"btn btn-brand dropdown-toggle\"\n                    type=\"button\"\n                    onClick={() => this.setState({ open: !this.state.open })}\n                    onBlur={() => this.setState({ open: false })}\n                >\n                    { label }\n                </button>\n                <div\n                    className={cls({\n                        \"dropdown-menu\": 1,\n                        \"show\": this.state.open\n                    })}\n                    onClick={ stopEvent }\n                    onMouseDown={ stopEvent }\n                >\n                    { this.renderOptions() }\n                </div>\n            </div>\n        );\n    }\n}","import React             from \"react\";\nimport PropTypes         from \"prop-types\";\nimport moment            from \"moment\";\nimport { connect }       from \"react-redux\";\nimport { Link }          from \"react-router-dom\";\nimport                        \"./TimelineGrid.scss\";\n\n\nexport class TimelineGrid extends React.Component\n{\n    static propTypes = {\n\n        /**\n         * The data to be rendered within the grid. Contains `description`,\n         * `name` a `measures[]` array to hold the measure results.\n         */\n        data: PropTypes.object,\n\n        /**\n         * Pass the clicked measure up to the parent component where the\n         * selection is being managed.\n         */\n        onRowClick: PropTypes.func,\n\n        /**\n         * Tell the TimelineGrid which is the selected organization ID.\n         * Rows that apply to that ID and to @selectedMeasureId will be\n         * rendered as selected.\n         */\n        selectedOrgId: PropTypes.string,\n\n        /**\n         * Tell the TimelineGrid which is the selected measure ID.\n         * Rows that apply to that ID and to @selectedOrgId will be\n         * rendered as selected.\n         */\n        selectedMeasureId: PropTypes.string,\n\n        /**\n         * The ID of the organization that this grid is about. This can be the\n         * same as @selectedOrgId if there is a selection within that org, or\n         * it can be different, n which case we render table that has no\n         * selected row.\n         */\n        orgId: PropTypes.string,\n\n        /**\n         * The organization that is being rendered.\n         */\n        org: PropTypes.object,\n\n        /**\n         * The dataSources included in this grid\n         */\n        dataSources: PropTypes.object\n    };\n\n    static defaultProps = {\n        data: {}\n    };\n\n    static contextTypes = {\n        router: PropTypes.object\n    };\n\n    render() {\n        const { description, name, measures } = this.props.data;\n\n        const headerLabels = [];\n        const bodyRows = [];\n        const now = moment();\n\n        // loop over each measure\n        measures.forEach(measure => {\n\n            const cells = [];\n            let i = 0;\n            for (let date in measure.data) {\n\n                const entry = measure.data[date];\n                const dateObject = moment(date);\n                const month = dateObject.format(\"MMM\");\n                if (headerLabels.indexOf(month) === -1) {\n                    headerLabels.push(month);\n                }\n\n                const title = `${dateObject.format(\"MMM YYYY\")} - ${entry.numerator} of ${entry.denominator}`;\n                const pct = Math.round(entry.pct);\n\n                const query = new URLSearchParams();\n                query.set(\"date\", dateObject.format(\"YYYY-MM-DD\"));\n                query.set(\"measure\", measure.id);\n                query.set(\"org\", this.props.org.value);\n                Object.keys(this.props.dataSources).forEach(key => {\n                    if (this.props.dataSources[key].selected) {\n                        query.append(\"ds\", key);\n                    }\n                });\n\n                // Values from the current year \"overlap\" the values from the\n                // last year. We can compare them and show trends\n                if (dateObject.isSame(now, \"year\")) {\n                    cells[i % 12] = (\n                        <td key={date} title={title}>\n                            <Link to={`/report?${query}`}>{ Math.round(pct) }%</Link>\n                        </td>\n                    );\n                }\n\n                // Values from the previous year that do not yet have new data\n                // for the current year\n                else {\n                    const newDate = moment(dateObject).add(1, \"year\");\n                    if (!measure.data[newDate]) {\n                        cells[i % 12] = (\n                            <td key={date} title={title}>\n                                <Link to={`/report?${query}`} className=\"text-muted\">{ Math.round(pct) }%</Link>\n                            </td>\n                        );\n                    }\n                }\n                i++;\n            }\n\n            bodyRows.push(\n                <tr\n                    key={ name + \"-\" + measure.name }\n                    className={\n                        (this.props.selectedOrgId === this.props.orgId &&\n                         this.props.selectedMeasureId === measure.id) ? \"selected\" : \"\" }\n                    onClick={ e => { if (e.target.nodeName !== \"A\") this.props.onRowClick(measure); }}\n                >\n                    <th>{ measure.name }</th>\n                    { cells }\n                </tr>\n            );\n        });\n\n        const header = (\n            <thead>\n                <tr>\n                    <th></th>\n                    { headerLabels.map((label, i) => (\n                        <th key={\"th-\" + i}>{ label }</th>\n                    )) }\n                </tr>\n            </thead>\n        );\n\n        return (\n            <div>\n                <h4>{ description }</h4>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-sm table-hover timeline-grid\">\n                        { header }\n                        <tbody>{ bodyRows }</tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        dataSources: state.dataSources,\n    })\n)(TimelineGrid);\n","import React     from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nconst Highcharts = window.Highcharts;\n\nexport default class LineChart extends React.Component\n{\n    static propTypes = {\n        chartOptions: PropTypes.object\n    };\n\n    componentDidMount() {\n        const fontFamily = \"-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",\" +\n            \"Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif,\\\"Apple Color Emoji\\\"\" +\n            \",\\\"Segoe UI Emoji\\\",\\\"Segoe UI Symbol\\\"\";\n\n        this.chart = window.Highcharts.chart(\"container\", {\n            chart: {\n                type               : \"spline\",\n                borderWidth        : 1,\n                borderColor        : \"#EEE\",\n                plotBackgroundColor: \"#F6F6F6\",\n                plotBorderColor    : \"#DDD\",\n                plotBorderWidth    : 1,\n                zoomType: \"x\"\n            },\n            drilldown: {\n                allowPointDrilldown: false,\n                drillUpButton: {\n                    text: \"This is a test\",\n                    position: {\n                        x: 0,\n                        y: -35\n                    },\n                    theme: {\n                        \"stroke-width\": 2,\n                        stroke: \"#4a90e2\"\n                    }\n                }\n            },\n            title: {\n                align: \"center\",\n                style: {\n                    fontFamily,\n                    fontSize  : \"1.5rem\",\n                    fontWeight: 500\n                }\n            },\n            subtitle: {\n                align: \"center\",\n                style: {\n                    fontFamily,\n                    fontSize  : \"1rem\",\n                    fontWeight: 300\n                }\n            },\n            xAxis: [\n                {\n                    lineWidth : 0,\n                    crosshair : true,\n                    type      : \"category\",\n                    id        : \"year_axis\",\n                    showEmpty : false,\n                    categories: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ],\n                    plotLines : [\n                        {\n                            value: moment().month(),\n                            zIndex: 2,\n                            color: \"rgba(200, 0, 0, 0.5)\",\n                            dashStyle: \"ShortDash\"\n                        }\n                    ],\n                    title: {\n                        text: null\n                    }\n                },\n                {\n                    lineWidth : 0,\n                    id        : \"monthAxis\",\n                    crosshair : true,\n                    type      : \"datetime\",\n                    minorTicks: true,\n                    showEmpty : false,\n                    zoomEnabled: true,\n                    min       : +moment().utc().startOf(\"month\"),\n                    max       : +moment().utc().endOf(\"month\").startOf(\"day\"),\n                    dateTimeLabelFormats: {\n                        day: \"%e\"\n                    },\n                    title: {\n                        text: null\n                    }\n                }\n            ],\n            yAxis: {\n                id: \"pct_axis\",\n                title: {\n                    text: \"% Patients\",\n                    style: {\n                        fontFamily,\n                        fontSize  : \"1rem\",\n                        fontWeight: 500\n                    }\n                },\n                lineColor   : \"#CCC\",\n                tickInterval: 25,\n                min         : 0,\n                max         : 100,\n                lineWidth   : 0\n            },\n            tooltip: {\n                crossHairs   : true,\n                shared       : true,\n                useHTML      : true,\n                headerFormat : \"<b>{point.key}</b><hr style=\\\"margin: 2px 0\\\"/><table>\",\n                pointFormat  : \"<tr><td style=\\\"color: {series.color}; text-align: right\\\">{series.name}: </td>\" +\n                    \"<td style=\\\"text-align: right\\\"><b>&nbsp;{point.y} %</b></td></tr>\",\n                footerFormat : \"</table>\",\n                valueDecimals: 2\n            },\n            plotOptions: {\n                spline: {\n                    lineWidth: 3,\n                    states: {\n                        hover: {\n                            lineWidth: 4\n                        }\n                    },\n                    marker: {\n                        enabled: false\n                    }\n                }\n            },\n            series: [\n                {\n                    name  : \"Current Year\",\n                    id    : \"current_year\",\n                    color : \"#4a90e2\",\n                    type  : \"areaspline\",\n                    xAxis : \"year_axis\",\n                    shadow: true,\n                    fillColor: {\n                        linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },\n                        stops: [\n                            [\n                                0,\n                                Highcharts.color(\"#4a90e2\").setOpacity(0.35).get()\n                            ],\n                            [\n                                1,\n                                Highcharts.color(\"#4a90e2\").setOpacity(0).get()\n                            ]\n                        ]\n                    },\n                    marker: {\n                        enabled: false\n                    }\n                },\n                {\n                    name     : \"Previous Year\",\n                    id       : \"previous_year\",\n                    color    : \"#555\",\n                    dashStyle: \"ShortDot\",\n                    xAxis    : \"year_axis\",\n                    lineWidth: 2\n                }\n            ],\n            navigation: {\n                menuItemStyle: {\n                    fontSize: \"10px\"\n                }\n            },\n            legend: {\n                align        : \"left\",\n                verticalAlign: \"top\",\n                layout       : \"horizontal\",\n                floating     : true,\n                x            : 60,\n                y            : 58\n            },\n        });\n\n        this.chart.update(this.props.chartOptions, true, true, false);\n    }\n\n    componentDidUpdate() {\n        this.chart.drillUp();\n        this.chart.update(this.props.chartOptions, true, true);\n    }\n\n    render() {\n        return <div id=\"container\" style={{\n            width       : \"100%\",\n            height      : 240,\n            marginBottom: 15\n        }}/>;\n    }\n}\n","import React                     from \"react\";\nimport PropTypes                 from \"prop-types\";\nimport { connect }               from \"react-redux\";\nimport moment                    from \"moment\";\nimport Sidebar                   from \"../Sidebar\";\nimport Dropdown                  from \"../Dropdown\";\nimport TimelineGrid              from \"../TimelineGrid\";\nimport LineChart                 from \"../LineChart\";\nimport { toggle as toggleOrg   } from \"../../store/organizations\";\nimport { toggle as togglePayer } from \"../../store/payers\";\nimport { queryMeasures }         from \"../../store/measureResults\";\n\nconst Highcharts = window.Highcharts;\n\nclass MeasuresPage extends React.Component\n{\n    static propTypes = {\n\n        /**\n         * The dispatch function is passed internally\n         */\n        dispatch: PropTypes.func.isRequired,\n\n        /**\n         * True if the measure results are currently being loaded\n         */\n        loading: PropTypes.bool,\n\n        /**\n         * The measure results data object (if available)\n         */\n        data: PropTypes.object,\n\n        /**\n         * Any error occurred while loading the measure results data\n         */\n        error: PropTypes.instanceOf(Error),\n\n        organizations: PropTypes.array,\n\n        payers: PropTypes.array,\n\n        measures: PropTypes.object,\n\n        dataSources: PropTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chart: {},\n            selection: {}\n        };\n\n        this.onRowClick = this.onRowClick.bind(this);\n    }\n\n    loadDataIfNeeded(prevProps) {\n\n        // Skip if currently loading\n        if (this.props.loading) {\n            return false;\n        }\n\n        // Skip if organizations are not loaded yet\n        if (!this.props.organizations.length) {\n            return false;\n        }\n\n        // Skip if payers are not loaded yet\n        if (!this.props.payers.length) {\n            return false;\n        }\n\n        // Skip if measures are not loaded yet\n        if (!Object.keys(this.props.measures).length) {\n            return false;\n        }\n\n        // Skip if dataSources are not loaded yet\n        if (!Object.keys(this.props.dataSources).length) {\n            return false;\n        }\n\n        // Load if no data has been loaded yet\n        if (!this.props.data) {\n            return this.props.dispatch(queryMeasures());\n        }\n\n        // Detect state changes\n        if (prevProps) {\n\n            // Detect dataSource changes\n            for (const id in prevProps.dataSources) {\n                const ds  = prevProps.dataSources[id];\n                const cur = this.props.dataSources[id];\n                if (cur.selected !== ds.selected) {\n                    return this.props.dispatch(queryMeasures());\n                }\n            }\n\n            // Detect payer changes\n            for (const ds of prevProps.payers) {\n                const cur = this.props.payers.find(o => o.value === ds.value);\n                if (cur.selected !== ds.selected) {\n                    return this.props.dispatch(queryMeasures());\n                }\n            }\n\n            // Detect organization changes\n            for (const org of prevProps.organizations) {\n                const cur = this.props.organizations.find(o => o.value === org.value);\n                if (cur.selected !== org.selected) {\n                    return this.props.dispatch(queryMeasures());\n                }\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps)\n    {\n        this.loadDataIfNeeded(prevProps);\n    }\n\n    componentDidMount()\n    {\n        this.loadDataIfNeeded();\n    }\n\n    getSelection() {\n        let { orgId, measureId } = this.state.selection;\n\n        if (!orgId) {\n            orgId = Object.keys(this.props.data.organizations).shift();\n        }\n\n        const org = this.props.data.organizations[orgId];\n\n        let measure;\n\n        if (!measureId) {\n            measure = org.measures[0];\n        } else {\n            measure = org.measures.find(o => o.id === measureId);\n        }\n\n        return { orgId, org, measure };\n    }\n\n    getChartOptions(orgId, orgData, measure) {\n        const series = [\n            {\n                data: [],\n                id  : \"current_year\",\n                name: \"Current Year\",\n                xAxis: \"year_axis\"\n            },\n            {\n                data: [],\n                id  : \"previous_year\",\n                name: \"Previous Year\",\n                xAxis: \"year_axis\"\n            }\n        ];\n\n        const now = moment().utc();\n        const thisYear = now.format(\"YYYY\");\n        const thisMonth = now.month();\n\n        let lastPct = 0;\n        let lastPct2 = 0;\n\n        Object.keys(measure.data).forEach(key => {\n            const [ year, month ] = key.split(\"-\");\n            const rec = measure.data[key];\n            const point = {\n                x: month * 1 - 1,\n                y: rec.pct,\n                name : moment(key).format(\"MMMM\"),\n                xAxis: 0\n            };\n            if (year === thisYear) {\n                series[0].data.push(point);\n\n                if (month * 1 === thisMonth) {\n                    lastPct = rec.pct;\n                    // point.drilldown = \"Month\";\n                }\n            }\n            else if (year * 1 === thisYear - 1) {\n                if (+month - 1 === thisMonth) {\n                    point.drilldown = \"Month_last_year\";\n                    lastPct2 = rec.pct;\n                }\n                series[1].data.push(point);\n            }\n        });\n\n        // Add some extra points for the current month\n        series[0].data.push({\n            x: thisMonth,\n            y: lastPct + 6 - (6 *  Math.random()),\n            xAxis: 0,\n            name: moment().format(\"MMMM\"),\n            color: \"#900\",\n            drilldown: \"Month\"\n        });\n\n        // Set up the drill-down data for the last month\n        let day1 = moment().utc().startOf(\"month\");\n        const drilldownSeries1 = {\n            id    : \"Month\",\n            name  : moment().format(\"MMMM YYYY\"),\n            data  : [],\n            type  : \"areaspline\",\n            xAxis : 1,\n            color : \"rgb(200, 100, 100)\",\n            shadow: true,\n            fillColor: {\n                linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },\n                stops: [\n                    [\n                        0,\n                        Highcharts.color(\"rgb(200, 100, 100)\").setOpacity(0.35).get()\n                    ],\n                    [\n                        1,\n                        Highcharts.color(\"#4a90e2\").setOpacity(0).get()\n                    ]\n                ]\n            },\n            marker: {\n                enabled: false\n            }\n        };\n\n        const drilldownSeries2 = {\n            name     : moment().subtract(1, \"year\").format(\"MMMM YYYY\"),\n            id       : \"Month_last_year\",\n            xAxis    : 1,\n            data     : [],\n            dashStyle: \"ShortDot\",\n            color    : \"#555\",\n            lineWidth: 2,\n            marker: {\n                enabled: false\n            }\n        };\n\n        const diff = lastPct2 - lastPct;\n\n        while (day1.isSameOrBefore(moment(now).endOf(\"month\"), \"day\")) {\n            if (day1.isSame(moment(now).endOf(\"month\"), \"day\")) {\n                drilldownSeries2.data.push({\n                    x: +day1,\n                    y: lastPct2\n                });\n            } else {\n                drilldownSeries2.data.push({\n                    x: +day1,\n                    y: lastPct + diff * Math.random()\n                });\n            }\n            if (day1.isSameOrBefore(now, \"day\")) {\n                drilldownSeries1.data.push({\n                    x: +day1,\n                    y: lastPct + diff - diff * 2 * Math.random()\n                });\n            }\n            day1.add(1, \"day\");\n        }\n\n        return {\n            title: {\n                text: measure.name\n            },\n            subtitle: {\n                text: orgData.description\n            },\n            series,\n            drilldown: {\n                series: [ drilldownSeries1, drilldownSeries2 ]\n            }\n        };\n    }\n\n    // Event Handlers ----------------------------------------------------------\n    onRowClick(orgId, orgData, measure)\n    {\n        this.setState({\n            selection: {\n                orgId,\n                measureId: measure.id\n            }\n        });\n    }\n\n    // Rendering methods -------------------------------------------------------\n    renderStage()\n    {\n        const { error, loading, data } = this.props;\n\n        if (loading) {\n            return <p style={{ textAlign: \"center\" }}>Loading...</p>;\n        }\n\n        if (error) {\n            return <pre>{ error.stack }</pre>;\n        }\n\n        if (!data) {\n            return <p style={{ textAlign: \"center\" }}>No data to display</p>;\n        }\n\n        let { orgId, org, measure } = this.getSelection();\n\n        const reports = [];\n        for (let id in data.organizations) {\n            const org = this.props.organizations.find(o => o.value === id);\n            const orgData = data.organizations[id];\n            if (!org.selected) continue;\n            reports.push(\n                <TimelineGrid\n                    key={ \"timeline-\" + id }\n                    data={ orgData }\n                    org={ org }\n                    orgId={ id }\n                    onRowClick={ msr => this.onRowClick(id, orgData, msr) }\n                    selectedOrgId={ orgId }\n                    selectedMeasureId={ measure.id }\n                />\n            );\n        }\n\n        return (\n            <>\n                <LineChart key=\"line-chart\" chartOptions={ this.getChartOptions(orgId, org, measure) }/>\n                <div style={{\n                    maxHeight: \"calc(100vh - 210px)\",\n                    overflow: \"auto\"\n                }}>\n                    { reports }\n                </div>\n            </>\n        );\n    }\n\n    render()\n    {\n        return (\n            <div className=\"row\">\n                <Sidebar/>\n                <div className=\"col-9\">\n                    <div className=\"row align-items-center\">\n                        <div className=\"col\">\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <label>Payer</label>\n                                    <Dropdown\n                                        label=\"All Payers\"\n                                        value={ null }\n                                        onSelect={id => this.props.dispatch(togglePayer(id))}\n                                        options={this.props.payers}\n                                    />\n                                </div>\n                                <div className=\"col\">\n                                    <label>Organization</label>\n                                    <Dropdown\n                                        multiple\n                                        label=\"Organizations\"\n                                        onSelect={id => this.props.dispatch(toggleOrg(id))}\n                                        options={this.props.organizations}\n                                    />\n                                </div>\n                                <div className=\"col\">\n                                    <label>Clinic</label>\n                                    <Dropdown\n                                        label=\"All Clinics\"\n                                        value={ null }\n                                        onSelect={() => 1}\n                                        options={[\n                                            {\n                                                label: \"All Clinics\",\n                                                description: \"Show results from all clinics\",\n                                                value: null\n                                            }\n                                        ]}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-3 align-self-end\">\n                            <br/>\n                            <button className=\"btn btn-brand active btn-block\">Update</button>\n                        </div>\n                    </div>\n                    <br/>\n                    { this.renderStage() }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        organizations: Object.keys(state.organizations).map(id => ({\n            value      : id,\n            label      : state.organizations[id].name,\n            selected   : state.organizations[id].enabled,\n            description: state.organizations[id].description\n        })),\n        payers: Object.keys(state.payers).map(id => ({\n            value   : id,\n            label   : state.payers[id].label,\n            selected: state.payers[id].selected\n        })),\n        measures   : state.measures,\n        dataSources: state.dataSources,\n        data       : state.measureResults.data,\n        loading    : state.measureResults.loading,\n        error      : state.measureResults.error\n    })\n)(MeasuresPage);\n","import React       from \"react\";\nimport PropTypes   from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport logo        from \"./logo.svg\";\nimport { login }   from \"../../store/auth\";\n\nclass LoginPage extends React.Component\n{\n    static propTypes = {\n        error      : PropTypes.oneOfType([PropTypes.instanceOf(Error), PropTypes.string]),\n        loading    : PropTypes.bool,\n        login      : PropTypes.func.isRequired,\n        currentUser: PropTypes.object\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            email   : \"user@aco.org\",\n            password: \"password\"\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onSubmit(e)\n    {\n        e.preventDefault();\n        this.props.login(this.state.email, this.state.password);\n    }\n\n    onChange(e)\n    {\n        this.setState({ [e.target.name ]: e.target.value });\n    }\n\n    render()\n    {\n        let { from } = this.props.location.state || { from: { pathname: \"/measures\" } };\n        if (!from || !from.pathname || from.pathname === \"/\") {\n            from = { pathname: \"/measures\" }\n        }\n\n        if (this.props.currentUser) {\n            return <Redirect to={from} push />\n        }\n\n        return (\n            <div className=\"row\">\n                <form className=\"mx-auto col-xs-12 col-sm-8 col-md-6 col-lg-4\"\n                    onSubmit={ this.onSubmit }>\n                    { this.props.error && (\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            { String(this.props.error) }\n                        </div>\n                    )}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email1\">Email address</label>\n                        <input\n                            type=\"email\"\n                            className=\"form-control\"\n                            id=\"email1\"\n                            placeholder=\"Enter email\"\n                            name=\"email\"\n                            value={ this.state.email }\n                            onChange={ this.onChange }\n                            disabled={ this.props.loading }\n                        />\n                        <small className=\"form-text text-muted\">Enter \"user@aco.org\" or \"user@payer.org\"</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password1\">Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            id=\"password1\"\n                            placeholder=\"Password\"\n                            name=\"password\"\n                            value={ this.state.password }\n                            onChange={ this.onChange }\n                            disabled={ this.props.loading }\n                        />\n                        <small className=\"form-text text-muted\">The default password is \"password\"</small>\n                    </div>\n                    <br/>\n                    <button\n                        disabled={ this.props.loading }\n                        type=\"submit\"\n                        className=\"btn btn-block btn-brand active\"\n                    >\n                        { this.props.loading && <i className=\"fas fa-spinner fa-spin\"/> } Login\n                    </button>\n                    <br/>\n                    <br/>\n                    <p className=\"text-center\">\n                        <img src={logo} alt=\"BCH Logo\" width=\"150\"/>\n                    </p>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => state.auth,\n    dispatch => ({\n        login: (email, pass) => dispatch(login(email, pass))\n    })\n)(LoginPage);\n","import React               from \"react\";\nimport { BrowserRouter }   from \"react-router-dom\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect }         from \"react-redux\";\nimport PropTypes           from \"prop-types\";\nimport Header              from \"../Header\";\nimport ReportPage          from \"../ReportPage\";\nimport MeasuresPage        from \"../MeasuresPage\";\nimport LoginPage           from \"../LoginPage\";\nimport                          \"./App.scss\";\n\nclass PrivateRoute extends React.Component\n{\n    static propTypes = {\n        user: PropTypes.object,\n        component: PropTypes.any\n    };\n\n    render() {\n        const { user, component: Component, ...rest } = this.props;\n        return (\n            <Route {...rest} render={ props => (\n                user ?\n                    <Component {...props} /> :\n                    <Redirect to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }} />\n            ) } />\n        );\n    }\n}\n\nfunction CPR(props) {\n    const Component = connect(state => ({\n        ...props,\n        user: state.auth.currentUser\n    }))(PrivateRoute);\n\n    return <Component {...props}/>;\n}\n\nclass App extends React.Component\n{\n    static propTypes = {\n        user: PropTypes.object,\n        loading: PropTypes.bool,\n        dispatch: PropTypes.func\n    };\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Header\n                        user={ this.props.user }\n                        loading={ this.props.loading }\n                        dispatch={ this.props.dispatch }\n                    />\n                    <div className=\"container\" style={{ marginTop: 30 }}>\n                        <CPR path=\"/\"           component={ReportPage} exact />\n                        <CPR path=\"/report\"     component={ReportPage} />\n                        <CPR path=\"/measures\"   component={MeasuresPage} />\n                        <Route path=\"/login\"    component={LoginPage} />\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default connect(state => ({\n    user: state.auth.currentUser,\n    loading: state.auth.loading\n}))(App);\n","import React                    from \"react\";\nimport { Provider }             from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store                    from \"./store\";\nimport App                   from \"./components/App\";\n\n\n\nexport default class Root extends React.Component\n{\n    render() {\n        return (\n            <BrowserRouter>\n                <Provider store={ store }>\n                    <App/>\n                </Provider>\n            </BrowserRouter>\n        );\n    }\n}\n\n","import React    from 'react';\nimport ReactDOM from 'react-dom';\nimport App      from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}